package com.tinesoft.droidlinguist.server.filter;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;

/**
 * This filter is used in production, to serve static resources generated by
 * "grunt build".
 * <p/>
 * <p>
 * It is configured to serve resources from the "dist" directory, which is the
 * Grunt destination directory.
 * </p>
 */
public class StaticResourcesProductionFilter implements Filter
{
	private static final Pattern UI_GRID_FONTS = Pattern.compile("(.*)(ui-grid\\.(eot|svg|ttf|woff)(.*))");

	@Override
	public void init(FilterConfig filterConfig) throws ServletException
	{
		// Nothing to initialize
	}

	@Override
	public void destroy()
	{
		// Nothing to destroy
	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException
	{
		HttpServletRequest httpRequest = (HttpServletRequest) request;
		String contextPath = ((HttpServletRequest) request).getContextPath();
		String requestURI = httpRequest.getRequestURI();
		requestURI = StringUtils.substringAfter(requestURI, contextPath);
		if (StringUtils.equals("/", requestURI))
		{
			requestURI = "/index.html";
		}
		// FIXME TKO: path to ui-grid's fonts is broken in PROD because the
		// ui-grid.css(that gets merged into main.css) expects the fonts to
		// be located in the same directory as the CSS file, which is not the
		// case. Importing ui-grid Style as LESS, would solve the issue, given
		// that we could then set the correct path to fonts, but the ui-grid
		// LESS is messy(see ui-grid#4659). So until then...
		Matcher m = UI_GRID_FONTS.matcher(requestURI);
		String newURI = m.matches() ? ("/bower_components/angular-ui-grid/" + m.group(2)) : ("/dist" + requestURI);
		request.getRequestDispatcher(newURI).forward(request, response);
	}
}
